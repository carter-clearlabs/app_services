buildscript {
  repositories {
    mavenCentral()
    jcenter()
  }
  dependencies {
    classpath('org.springframework.boot:spring-boot-gradle-plugin:2.0.0.RELEASE')
    classpath('gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.13.0')
  }
}

plugins {
  id 'application'
  id 'io.franzbecker.gradle-lombok' version '1.11'
  id 'java'
}

apply plugin: 'org.springframework.boot'
apply plugin: 'com.palantir.docker'

docker {
  name "${project.group}/${jar.baseName}"
  files jar.archivePath
  buildArgs(['JAR_FILE': "${jar.archiveName}"])
}

lombok {
  sha256 = ""
}

repositories {
  jcenter()
}

version = '1.0-SNAPSHOT'
sourceCompatibility = '1.8'
mainClassName = 'com.clearlabs.orb.OrbBackend'
def grpcVersion = '1.9.0' // CURRENT_GRPC_VERSION
def vertxVersion = '3.5.1'
def springVersion = '2.0.0.RELEASE'

dependencies {
  compile project(':service_definitions')

  compile "org.springframework.boot:spring-boot-starter-data-jpa:$springVersion"
  compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '2.0.0.RELEASE'

  // AXON framework for CQRS/ES
//  compile 'org.axonframework:axon-core:3.1'
  compile 'org.axonframework:axon-spring-boot-starter:3.1'
//  compile 'org.axonframework:axon-amqp:3.1'

  compile "com.google.cloud.sql:mysql-socket-factory:1.0.5"
  compile "org.springframework.boot:spring-boot-starter-data-rest:$springVersion"
  compile "org.springframework.security:spring-security-crypto:5.0.3.RELEASE"

  compile 'org.lognet:grpc-spring-boot-starter:2.1.5'

  // Functional Library - Providing common data types - Option/Result/Error/Try - For composition
  compile "io.vavr:vavr:0.9.2"

  // GRPC resources
  compile "io.grpc:grpc-netty:$grpcVersion"
  compile "io.grpc:grpc-protobuf:$grpcVersion"
  compile "io.grpc:grpc-stub:$grpcVersion"

  testCompile "org.springframework.boot:spring-boot-starter-test:$springVersion"
}

task wrapper(type: Wrapper) {
  gradleVersion = '4.3.1'
}
